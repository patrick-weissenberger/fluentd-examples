# SYSTEM CONFIGURATION
# https://docs.fluentd.org/deployment/system-config

<system>
    <log>
        log_level warn
        format json
        time_format %Y-%m-%d
    </log>
</system>





# EXAMPLE 01: RAW DATA OVER TCP/ UDP
# 
# This example shows how to receive raw data over tcp/udp and 
# convert it to JSON for storage in a file.
# 
# https://docs.fluentd.org/input/tcp
# https://docs.fluentd.org/input/udp

# SOURCES
# 
# => We will use @type tcp/ @type udp to listen for all incoming 
# messages (called 'events') on the specified ports.
# => We use @label to simplify the routing of received events
# => We assign a tag to each incoming event
# => We use '@type none' inside the <parse> block to not modify 
# the raw data yet
# 
# Explanation: Labels can be thought of a way to group related logs, 
# while tags are assigned to individual events. Labels are most often 
# used for routing events, while tags are used to process events at a 
# granular level.

<source>
    @type tcp
    @label @TCPUDP
    port 5100
    tag example.tcpudp
    <parse>
        @type none
    </parse>
</source>

<source>
    @type udp
    @label @TCPUDP
    port 5100
    tag example.tcpudp
    <parse>
        @type none
    </parse>
</source>

# PIPELINES (@LABEL)
# 
# We use the <label> block to catch and process all events labeled 
# with the specified label.

<label @TCPUDP>

    <filter **>
        @type parser
        key_name message
        reserve_data true
        format /<(?<pri>\d+)>date=(?<date>\S+) time=(?<time>\S+) devname=(?<devname>\S+) devid=(?<devid>\S+) logid=(?<logid>\S+) type=(?<type>\S+) subtype=(?<subtype>\S+) level=(?<level>\S+) vd=(?<vd>\S+) srcip=(?<srcip>\S+) srcport=(?<srcport>\d+) srcintf="(?<srcintf>[^"]+)" dstip=(?<dstip>\S+) dstport=(?<dstport>\d+) dstintf="(?<dstintf>[^"]+)" sessionid=(?<sessionid>\d+) proto=(?<proto>\d+) action=(?<action>\S+) policyid=(?<policyid>\d+) appid=(?<appid>\d+) app="(?<app>[^"]+)" user="(?<user>[^"]+)" group="(?<group>[^"]+)" duration=(?<duration>\d+) sentbyte=(?<sentbyte>\d+) rcvdbyte=(?<rcvdbyte>\d+) sentpkt=(?<sentpkt>\d+) rcvdpkt=(?<rcvdpkt>\d+) tranip=(?<tranip>\S+) tranport=(?<tranport>\d+) service="(?<service>[^"]+)"/
        <parse>
            @type none
        </parse>
    </filter>

    # The @copy directive duplicates the event stream an unlimited 
    # number of times, making it ideal for situations where the data 
    # needs to be further formatted or output to different locations.

    <match **>
        @type copy

        # JSON
        <store>
            @type file
            path /fluentd/log/example-01/json
            compress gzip
            <format>
                @type json
            </format>
            <buffer>
                timekey 1d
                timekey_use_utc true
                timekey_wait 10m
                path_suffix ".json"
            </buffer>
        </store>

        # CSV
        <store>
            @type file
            path /fluentd/log/example-01/csv
            compress gzip
            <format>
                @type csv
                fields message
            </format>
            <buffer>
                timekey 1d
                timekey_use_utc true
                timekey_wait 10m
                path_suffix ".csv"
            </buffer>
        </store>
    </match>
</label>





# Convert RFC-compliant syslog to various data formats

<source>
    @type syslog
    @label @SYSLOG
    port 5110
    <transport tcp>
    </transport>
    tag example.syslog
        <parse>
            @type syslog
            message_format rfc3164
            with_priority true
        </parse>
</source>

<source>
    @type syslog
    @label @SYSLOG
    port 5110
    <transport udp>
    </transport>
    tag example.syslog
        <parse>
            @type syslog
            message_format rfc3164
            with_priority true
        </parse>
</source>

<label @SYSLOG>
    <match **>
        @type copy
        # JSON
        <store>
            @type file
            path /fluentd/log/example-02/json
            compress gzip
            <format>
                @type json
            </format>
            <buffer>
                timekey 1d
                timekey_use_utc true
                timekey_wait 10m
                path_suffix ".json"
            </buffer>
        </store>

        # CSV
        <store>
            @type file
            path /fluentd/log/example-02/csv
            compress gzip
            <format>
                @type csv
                fields host, ident, message
            </format>
            <buffer>
                timekey 1d
                timekey_use_utc true
                timekey_wait 10m
                path_suffix ".csv"
            </buffer>
        </store>

        # TSV
        <store>
            @type file
            path /fluentd/log/example-02/tsv
            compress gzip
            <format>
                @type tsv
                keys host, ident, message, foo
            </format>
            <buffer>
                timekey 1d
                timekey_use_utc true
                timekey_wait 10m
                path_suffix ".tsv"
            </buffer>
        </store>

        # SINGLE VALUE
        <store>
            @type file
            path /fluentd/log/example-02/sv
            compress gzip
            <format>
                @type single_value
                message_key host
            </format>
            <buffer>
                timekey 1d
                timekey_use_utc true
                timekey_wait 10m
                path_suffix ".sv"
            </buffer>
        </store>
    </match>
</label>